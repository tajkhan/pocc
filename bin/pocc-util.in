#!/usr/bin/perl -w
## pocc-bin for pocc in /Users/pouchet
##
## Made by Louis-Noel Pouchet
## Contact: <louis-noel.pouchet@inria.fr>
##
## Started on  Tue Apr 14 17:43:47 2009 Louis-Noel Pouchet
## Last update Fri Oct 16 21:18:57 2009 Louis-Noel Pouchet
##

use Switch;

## Some global variables.
$BASEDIR = "@abs_top_srcdir@";

## Include command scripts.
do "$BASEDIR/bin/pocc-alternate";
do "$BASEDIR/bin/pocc-checkout";
do "$BASEDIR/bin/pocc-make";

sub print_help
{
    print "Usage: pocc-util <command>\n";
    print "<command>: alternate [configuration-name]\n";
    print "<command>: checkout [software-name]\n";
    print "<command>: make [software-name]\n";
    print "<command>: buildall\n";
    print "<command>: help\n";
}


# args: command line options
sub parse_args
{
    my $i;
    my @args = @_;
    if ($#args == -1) {
	print_help;
	exit 1;
    }
    for($i = 0; $i <= $#args; $i++) {
	switch ($args[$i]) {
	    case "help" { print_help; exit 1; }
	    case "alternate" {
		die "Missing argument\n" if ($i eq $#args);
		alternate($BASEDIR, $args[$i + 1]);
		checkout($BASEDIR, "all");
		make($BASEDIR, "all", "force");
		my $ret = system ("cd $BASEDIR && make install");
		die "[PoCC] fatal error\n" if ($ret != 0);
		$i = $#args;
	    }
	    case "checkout" {
		if ($i < $#args) {
		    checkout($BASEDIR, $args[$i + 1]);
		}
		else {
		    checkout($BASEDIR, "all");
		}
		$i = $#args;
	    }
	    case "make" {
		if ($i < $#args) {
		    make($BASEDIR, $args[$i + 1], "");
		}
		else {
		    make($BASEDIR, "all", "");
		}
		$i = $#args;
	    }
	    case "buildall" {
		make($BASEDIR, "all", "");
		my $ret = system ("cd $BASEDIR && make install");
		die "[PoCC] fatal error\n" if ($ret != 0);
		$i = $#args;
	    }
	    else { print "Unknown argument: $args[$i]\n"; }
	}
    }
}


# args:
sub main
{
    parse_args (@_);
}


main(@ARGV);
