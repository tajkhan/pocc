#!/usr/bin/perl -w
## pocc-make.pl for pocc in /Users/pouchet
##
## Made by Louis-Noel Pouchet
## Contact: <louis-noel.pouchet@inria.fr>
##
## Started on  Wed Apr 15 18:50:36 2009 Louis-Noel Pouchet
## Last update Mon Apr 27 19:23:12 2009 Louis-Noel Pouchet
##

use Switch;
use Term::ANSIColor;

## Some global variables.
$BDIR_MK = ".";
$CONFIGURE = "";
$DRIVER = "";


sub print_config
{
    my (%config) = @_;
    ## Print config table.
    for $soft (keys %config) {
	for $field (keys %{$config{$soft}}) {
	    $value = $config{$soft}{$field};
	    print "$soft: $field -> $value\n";
	}
    }
}


sub read_config_file
{
    my ($file) = @_;
    my %config_data;

    open FILE, "$file" or die $!;
    my $mode = "";
    my $line;
    while (<FILE>) {
	if ($_ !~ /^#|^[\s\t]*\n/) {
	    $_ =~ s/(.*)\n/$1/g;
	    if ($_ =~ /^\[.*\]/) {
		$mode = $_;
		$mode =~ s/^\[(.*)\].*/$1/g;
	    }
	    else {
		my @entry = split(/:/, $_);
		$entry[0] =~ s/\s//g;
		my $data = $entry[1];
		my $i;
		for ($i = 2; $i <= $#entry; $i++) {
		    $data = $data . ":" . $entry[$i];
		}
		$config_data{$mode}{$entry[0]} = $data;
	    }
	}
    }

    #print_config(%config_data);

    return %config_data;
}


sub get_all_soft
{
    my %driver_data = read_config_file($DRIVER);
    my $softlist = $driver_data{"pocc-driver"}{"software-versions"};
    $softlist =~ s/\s+/ /g;
    $softlist =~ s/^\s//g;
    return split(/ /, $softlist);
}


sub needs_install
{
    return 1;
}


sub make_soft
{
    my ($soft, %softinfo) = @_;
    my $softbootstrap = "";
    my $category = $softinfo{"category"};
    $category =~ s/\s//g;
    my $prefix = $BDIR_MK . "/" . $category;
    my $dir = $prefix . "/" . $soft;

    ## Bootstrap.
    my $force_configure = "no";
    if (defined($softinfo{"bootstrap"})) {
	$softbootstrap = $softinfo{"bootstrap"};
	$softbootstrap =~ s/^\s//g;
	$res = `find $dir -maxdepth 1 -name "*configure"`;
	if ($res eq "") {
	    print "[PoCC] Bootstrapping in $dir\n";
	    $val = system("cd $dir && ./$softbootstrap");
	    $force_configure = "yes";
	    die "Error in bootsraping of $soft\n" if ($val != 0);
	}
    }
    ## Configure.
    my $mod = $softinfo{"module"};
    $mod =~ s/\s//g;
    $prefix = $prefix . "/install-$mod";
    my $config_args = "";
    if (defined($softinfo{"configure"})) {
	$config_args = $softinfo{"configure"};
	$config_args =~ s/\$poccsrcdir/$BDIR_MK/g;
    }
    print "[PoCC] Configuring $soft in $dir with --disable-static --enable-shared --prefix=$prefix $config_args\n";
    $res = `find $dir -maxdepth 1 -name "*Makefile"`;
    if ($res eq "" || $force_configure eq "yes") {
	$val = system("cd $dir && ./configure --disable-static --enable-shared --prefix=$prefix $config_args");
	die "Error in configuration of $soft\n" if ($val != 0);
    }
    $val = system("cd $dir && make");
    die "Error in making of $soft\n" if ($val != 0);
    if (needs_install($dir)) {
	$val = system("cd $dir && make install");
	die "Error in making of $soft\n" if ($val != 0);
    }
}


sub order_by_deps
{
    my (@soft) = @_;

    return @soft;
}


sub make_all_soft
{
    print "[PoCC] make all soft\n";
    my ($mode, %config) = @_;
    my @soft = get_all_soft($mode);
    @soft = order_by_deps(@soft);
    my $i;

    for ($i = 0; $i <= $#soft; $i++) {
	make_soft($soft[$i], %{$config{$soft[$i]}});
    }
}


sub make
{
    my ($basedir, $soft) = @_;
    $BDIR_MK = $basedir;
    $CONFIGURE = "$BDIR_MK/config/configure.cfg";
    $DRIVER = "$BDIR_MK/config/driver.cfg";
    print (colored ("* Full Make of PoCC. This takes a while...", "green green"), "\n");
    my %config_data = read_config_file($CONFIGURE);

    if ($soft eq "all") {
	make_all_soft($mode, %config_data);
    }
    else {
	if (! defined($config_data{$soft})) {
	    die "Unkown software $soft. Please update config/configure.cfg\n";
	}
	make_soft($soft, $config_data{$soft});
    }

     print (colored ("* Make done", "green green"), "\n");
}
